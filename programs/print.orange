.section text

	ADR r1, $outputString
	PUSH r1		; save string pointer for syscall
	BL $strLen	; call strLen
	POP r3		; store returned length in r3 for syscall
	POP r2		; restore string pointer in r2 for syscall
	MOVZ r1, #1	; set file descriptor to stdout
	MOVZ r9, #1 ; set syscall number to 1 = write
	SYSCALL		; execute write syscall
	HALT

$strLen:
	;; strLen returns the length of the null-terminated string
	;;
	;; Arguments:
	;;  - r1: pointer to string
	;;
	;; Returns:
	;;  - size, on stack

	MOVZ r2, #0
$_strLen.loop:
	LDBYTE r3, [r1]
	CMPI r3, #0
	B.EQ $_strLen.done
	ADDI r2, #1		; increase length by one
	ADDI r1, #1		; advance pointer by one byte
	B $_strLen.loop
$_strLen.done:
	PUSH r2
	BREG r15

.section data

$outputString:
	.string "Hello from inside the Orange VM!\n"
